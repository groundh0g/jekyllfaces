{
  "name": "jekyllfaces-tests",
  "version": "0.1.0",
  "description": "Tests for a Jekyl helper.",
  "main": "index.js",
  "directories": {
    "doc": "docs"
  },
  "scripts": {
    "test": "npm run --silent build && npm run --silent lint",
    "test-ci": "circleci build",

    "build": "echo --------- && echo \"Building jekyll site from source files ...\" && (cd docs/ && bundle exec jekyll build)",
    "start": "(cd docs/ && bundle exec jekyll server)",

    "lint": "npm run lint-md && npm run lint-liquid && npm run --silent build && npm run lint-html && npm run lint-css && npm run lint-js",
    "lint-md": "LINT_ERROR_COUNT=0 && echo --------- && for e in \"markdown\" \"md\"; do SUM=0 && echo \"Searching for '*.$e' ...\" && for f in $(find . -name \"*.$e\" -not -path './node_modules/*' -not -path './_sites/*'); do echo \"Validating '$f' ...\" && ./node_modules/.bin/markdownlint \"$f\" && : || SUM=$(( SUM + 1 )); done && if [ $SUM -gt 0 ]; then LINT_ERROR_COUNT=$(( LINT_ERROR_COUNT + SUM )); fi; done; if [ $LINT_ERROR_COUNT -gt 0 ]; then echo \"There were $LINT_ERROR_COUNT errors!\" && echo \"ERROR: Exited with code 1\" && (exit 1); else echo \"Success!\"; fi",
    "lint-liquid": "LINT_ERROR_COUNT=0 && echo --------- && for p in $(find ./docs -type d -not -path './docs/_site' -not -path './docs/_site/*'); do ./node_modules/.bin/liquid-linter --custom-tag \"seo\" \"$p\" && : || LINT_ERROR_COUNT=$(( LINT_ERROR_COUNT + 1 )); done && if [ $LINT_ERROR_COUNT -gt 0 ]; then echo \"There were $LINT_ERROR_COUNT errors!\" && echo \"ERROR: Exited with code 1\"; else echo \"Success!\"; fi",
    "lint-html": "echo --------- && echo \"Validating HTML...\" && cd docs/ && htmlproofer ./_site --only-4xx --check-favicon --check-html && echo Success! || echo \"ERROR: Exited with code $?\"",
    "lint-css": "echo --------- && echo \"Validating CSS...\" && ./node_modules/.bin/stylelint docs/_site/**/*.css && echo Success! || echo \"ERROR: Exited with code $?\"",
    "lint-js": "echo --------- && echo \"Validating JS and JSX...\" && ./node_modules/.bin/eslint --env browser docs/ && echo Success! || echo \"ERROR: Exited with code $?\"",

    "init-gems": "npm run init-cmake && echo --------- && (cd docs/ && gem install commonmarker -v '0.17.6' && gem install bundler && bundle install)",
    "init-cmake": "(cmake --version) && (echo \"INFO: cmake found. Skipping install.\" && (exit 0)) || (echo \"WARNING: cmake not found. Installing ...\" && sudo apt-get install cmake)"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/groundh0g/jekyllfaces.git"
  },
  "keywords": [
    "jekyll"
  ],
  "author": "Joseph Hall (@groundh0g)",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/groundh0g/jekyllfaces/issues"
  },
  "homepage": "https://jekyllfaces.com/",
  "devDependencies": {
    "eslint": "^4.12.1",
    "eslint-config-google": "^0.9.1",
    "eslint-plugin-react": "^7.5.1",
    "liquid-linter-cli": "^0.3.0",
    "markdownlint-cli": "^0.5.0",
    "stylelint": "^8.3.1"
  }
}
